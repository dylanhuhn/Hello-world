var mainWsName = "Menahga";
var listsWsName = "Lists"
var firstLevelColumn = 6;
var secondLevelColumn = 7;


var ws =SpreadsheetApp.getActiveSpreadsheet().getSheetByName(mainWsName);
var wsLists =SpreadsheetApp.getActiveSpreadsheet().getSheetByName(listsWsName);
var options = wsLists.getRange(2,1,wsLists.getLastRow()-1,2).getValues();




function onEdit(e){
  var activeCell = e.range;
  var val = activeCell.getValue();
  var r = activeCell.getRow();
  var c = activeCell.getColumn(); 
  var wsName = activeCell.getSheet().getName();
  if(wsName === mainWsName && c === firstLevelColumn && r > 1){
    applyFirstLevelValidation(val,r,);
   } else if(wsName === mainWsName && c === secondLevelColumn && r > 1){
   applySecondLevelValidation(val,r,);
   }                             
  
    
 }//end onEdit

function applyFirstLevelValidation(val,r,){
  
  if(val === ""){
      ws.getRange(r,secondLevelColumn).clearContent();
      ws.getRange(r,secondLevelColumn).clearDataValidations();
    }else {
    ws.getRange(r,secondLevelColumn).clearContent();
    ws.getRange(r,secondLevelColumn).clearDataValidations();
    var filteredOptions = options.filter(function(options){return options[0] === val});
    var listToApply = filteredOptions.map(function(options){return options[1]});
    var cell = ws.getRange(r,secondLevelColumn).setValue(val);
    applyValidationToCell(listToApply,cell);
    }

   }     
function applyValidationToCell(list,cell){
  
  var rule =SpreadsheetApp
  .newDataValidation()
  .requireValueInList(list)
  .setAllowInvalid(false)
  .build();
  
  cell.setDataValidation(rule)
}

      
var mainWsName = "Verndale";
var listsWsName = "Lists"
var firstLevelColumn = 6;
var secondLevelColumn = 7;


var ws =SpreadsheetApp.getActiveSpreadsheet().getSheetByName(mainWsName);
var wsLists =SpreadsheetApp.getActiveSpreadsheet().getSheetByName(listsWsName);
var options = wsLists.getRange(2,1,wsLists.getLastRow()-1,2).getValues();




function onEdit(e){
  var activeCell = e.range;
  var val = activeCell.getValue();
  var r = activeCell.getRow();
  var c = activeCell.getColumn(); 
  var wsName = activeCell.getSheet().getName();
  if(wsName === mainWsName && c === firstLevelColumn && r > 1){
    applyFirstLevelValidation(val,r,);
   } else if(wsName === mainWsName && c === secondLevelColumn && r > 1){
   applySecondLevelValidation(val,r,);
   }                             
  
    
 }//end onEdit

function applyFirstLevelValidation(val,r,){
  
  if(val === ""){
      ws.getRange(r,secondLevelColumn).clearContent();
      ws.getRange(r,secondLevelColumn).clearDataValidations();
    }else {
    ws.getRange(r,secondLevelColumn).clearContent();
    ws.getRange(r,secondLevelColumn).clearDataValidations();
    var filteredOptions = options.filter(function(options){return options[0] === val});
    var listToApply = filteredOptions.map(function(options){return options[1]});
    var cell = ws.getRange(r,secondLevelColumn).setValue(val);
    applyValidationToCell(listToApply,cell);
    }

   }     
function applyValidationToCell(list,cell){
  
  var rule =SpreadsheetApp
  .newDataValidation()
  .requireValueInList(list)
  .setAllowInvalid(false)
  .build();
  
  cell.setDataValidation(rule)
}
      
      
      
 var mainWsName = "Wadena";
var listsWsName = "Lists"
var firstLevelColumn = 6;
var secondLevelColumn = 7;


var ws =SpreadsheetApp.getActiveSpreadsheet().getSheetByName(mainWsName);
var wsLists =SpreadsheetApp.getActiveSpreadsheet().getSheetByName(listsWsName);
var options = wsLists.getRange(2,1,wsLists.getLastRow()-1,2).getValues();




function onEdit(e){
  var activeCell = e.range;
  var val = activeCell.getValue();
  var r = activeCell.getRow();
  var c = activeCell.getColumn(); 
  var wsName = activeCell.getSheet().getName();
  if(wsName === mainWsName && c === firstLevelColumn && r > 1){
    applyFirstLevelValidation(val,r,);
   } else if(wsName === mainWsName && c === secondLevelColumn && r > 1){
   applySecondLevelValidation(val,r,);
   }                             
  
    
 }//end onEdit

function applyFirstLevelValidation(val,r,){
  
  if(val === ""){
      ws.getRange(r,secondLevelColumn).clearContent();
      ws.getRange(r,secondLevelColumn).clearDataValidations();
    }else {
    ws.getRange(r,secondLevelColumn).clearContent();
    ws.getRange(r,secondLevelColumn).clearDataValidations();
    var filteredOptions = options.filter(function(options){return options[0] === val});
    var listToApply = filteredOptions.map(function(options){return options[1]});
    var cell = ws.getRange(r,secondLevelColumn).setValue(val);
    applyValidationToCell(listToApply,cell);
    }

   }     
function applyValidationToCell(list,cell){
  
  var rule =SpreadsheetApp
  .newDataValidation()
  .requireValueInList(list)
  .setAllowInvalid(false)
  .build();
  
  cell.setDataValidation(rule)
}      
      
      
      
var mainWsName = "Brainerd";
var listsWsName = "Lists"
var firstLevelColumn = 6;
var secondLevelColumn = 7;


var ws =SpreadsheetApp.getActiveSpreadsheet().getSheetByName(mainWsName);
var wsLists =SpreadsheetApp.getActiveSpreadsheet().getSheetByName(listsWsName);
var options = wsLists.getRange(2,1,wsLists.getLastRow()-1,2).getValues();




function onEdit(e){
  var activeCell = e.range;
  var val = activeCell.getValue();
  var r = activeCell.getRow();
  var c = activeCell.getColumn(); 
  var wsName = activeCell.getSheet().getName();
  if(wsName === mainWsName && c === firstLevelColumn && r > 1){
    applyFirstLevelValidation(val,r,);
   } else if(wsName === mainWsName && c === secondLevelColumn && r > 1){
   applySecondLevelValidation(val,r,);
   }                             
  
    
 }//end onEdit

function applyFirstLevelValidation(val,r,){
  
  if(val === ""){
      ws.getRange(r,secondLevelColumn).clearContent();
      ws.getRange(r,secondLevelColumn).clearDataValidations();
    }else {
    ws.getRange(r,secondLevelColumn).clearContent();
    ws.getRange(r,secondLevelColumn).clearDataValidations();
    var filteredOptions = options.filter(function(options){return options[0] === val});
    var listToApply = filteredOptions.map(function(options){return options[1]});
    var cell = ws.getRange(r,secondLevelColumn).setValue(val);
    applyValidationToCell(listToApply,cell);
    }

   }     
function applyValidationToCell(list,cell){
  
  var rule =SpreadsheetApp
  .newDataValidation()
  .requireValueInList(list)
  .setAllowInvalid(false)
  .build();
  
  cell.setDataValidation(rule)
} 
      
var mainWsName = "Crosby Ironton";
var listsWsName = "Lists"
var firstLevelColumn = 6;
var secondLevelColumn = 7;


var ws =SpreadsheetApp.getActiveSpreadsheet().getSheetByName(mainWsName);
var wsLists =SpreadsheetApp.getActiveSpreadsheet().getSheetByName(listsWsName);
var options = wsLists.getRange(2,1,wsLists.getLastRow()-1,2).getValues();




function onEdit(e){
  var activeCell = e.range;
  var val = activeCell.getValue();
  var r = activeCell.getRow();
  var c = activeCell.getColumn(); 
  var wsName = activeCell.getSheet().getName();
  if(wsName === mainWsName && c === firstLevelColumn && r > 1){
    applyFirstLevelValidation(val,r,);
   } else if(wsName === mainWsName && c === secondLevelColumn && r > 1){
   applySecondLevelValidation(val,r,);
   }                             
  
    
 }//end onEdit

function applyFirstLevelValidation(val,r,){
  
  if(val === ""){
      ws.getRange(r,secondLevelColumn).clearContent();
      ws.getRange(r,secondLevelColumn).clearDataValidations();
    }else {
    ws.getRange(r,secondLevelColumn).clearContent();
    ws.getRange(r,secondLevelColumn).clearDataValidations();
    var filteredOptions = options.filter(function(options){return options[0] === val});
    var listToApply = filteredOptions.map(function(options){return options[1]});
    var cell = ws.getRange(r,secondLevelColumn).setValue(val);
    applyValidationToCell(listToApply,cell);
    }

   }     
function applyValidationToCell(list,cell){
  
  var rule =SpreadsheetApp
  .newDataValidation()
  .requireValueInList(list)
  .setAllowInvalid(false)
  .build();
  
  cell.setDataValidation(rule)
} 
      
      
 var mainWsName = "Bertha";
var listsWsName = "Lists"
var firstLevelColumn = 6;
var secondLevelColumn = 7;


var ws =SpreadsheetApp.getActiveSpreadsheet().getSheetByName(mainWsName);
var wsLists =SpreadsheetApp.getActiveSpreadsheet().getSheetByName(listsWsName);
var options = wsLists.getRange(2,1,wsLists.getLastRow()-1,2).getValues();




function onEdit(e){
  var activeCell = e.range;
  var val = activeCell.getValue();
  var r = activeCell.getRow();
  var c = activeCell.getColumn(); 
  var wsName = activeCell.getSheet().getName();
  if(wsName === mainWsName && c === firstLevelColumn && r > 1){
    applyFirstLevelValidation(val,r,);
   } else if(wsName === mainWsName && c === secondLevelColumn && r > 1){
   applySecondLevelValidation(val,r,);
   }                             
  
    
 }//end onEdit

function applyFirstLevelValidation(val,r,){
  
  if(val === ""){
      ws.getRange(r,secondLevelColumn).clearContent();
      ws.getRange(r,secondLevelColumn).clearDataValidations();
    }else {
    ws.getRange(r,secondLevelColumn).clearContent();
    ws.getRange(r,secondLevelColumn).clearDataValidations();
    var filteredOptions = options.filter(function(options){return options[0] === val});
    var listToApply = filteredOptions.map(function(options){return options[1]});
    var cell = ws.getRange(r,secondLevelColumn).setValue(val);
    applyValidationToCell(listToApply,cell);
    }

   }     
function applyValidationToCell(list,cell){
  
  var rule =SpreadsheetApp
  .newDataValidation()
  .requireValueInList(list)
  .setAllowInvalid(false)
  .build();
  
  cell.setDataValidation(rule)
}      
      
      
var mainWsName = "Staples";
var listsWsName = "Lists"
var firstLevelColumn = 6;
var secondLevelColumn = 7;


var ws =SpreadsheetApp.getActiveSpreadsheet().getSheetByName(mainWsName);
var wsLists =SpreadsheetApp.getActiveSpreadsheet().getSheetByName(listsWsName);
var options = wsLists.getRange(2,1,wsLists.getLastRow()-1,2).getValues();




function onEdit(e){
  var activeCell = e.range;
  var val = activeCell.getValue();
  var r = activeCell.getRow();
  var c = activeCell.getColumn(); 
  var wsName = activeCell.getSheet().getName();
  if(wsName === mainWsName && c === firstLevelColumn && r > 1){
    applyFirstLevelValidation(val,r,);
   } else if(wsName === mainWsName && c === secondLevelColumn && r > 1){
   applySecondLevelValidation(val,r,);
   }                             
  
    
 }//end onEdit

function applyFirstLevelValidation(val,r,){
  
  if(val === ""){
      ws.getRange(r,secondLevelColumn).clearContent();
      ws.getRange(r,secondLevelColumn).clearDataValidations();
    }else {
    ws.getRange(r,secondLevelColumn).clearContent();
    ws.getRange(r,secondLevelColumn).clearDataValidations();
    var filteredOptions = options.filter(function(options){return options[0] === val});
    var listToApply = filteredOptions.map(function(options){return options[1]});
    var cell = ws.getRange(r,secondLevelColumn).setValue(val);
    applyValidationToCell(listToApply,cell);
    }

   }     
function applyValidationToCell(list,cell){
  
  var rule =SpreadsheetApp
  .newDataValidation()
  .requireValueInList(list)
  .setAllowInvalid(false)
  .build();
  
  cell.setDataValidation(rule)
}            
      
      
      
      var mainWsName = "Walker Hackensack Akeley";
var listsWsName = "Lists"
var firstLevelColumn = 6;
var secondLevelColumn = 7;


var ws =SpreadsheetApp.getActiveSpreadsheet().getSheetByName(mainWsName);
var wsLists =SpreadsheetApp.getActiveSpreadsheet().getSheetByName(listsWsName);
var options = wsLists.getRange(2,1,wsLists.getLastRow()-1,2).getValues();




function onEdit(e){
  var activeCell = e.range;
  var val = activeCell.getValue();
  var r = activeCell.getRow();
  var c = activeCell.getColumn(); 
  var wsName = activeCell.getSheet().getName();
  if(wsName === mainWsName && c === firstLevelColumn && r > 1){
    applyFirstLevelValidation(val,r,);
   } else if(wsName === mainWsName && c === secondLevelColumn && r > 1){
   applySecondLevelValidation(val,r,);
   }                             
  
    
 }//end onEdit

function applyFirstLevelValidation(val,r,){
  
  if(val === ""){
      ws.getRange(r,secondLevelColumn).clearContent();
      ws.getRange(r,secondLevelColumn).clearDataValidations();
    }else {
    ws.getRange(r,secondLevelColumn).clearContent();
    ws.getRange(r,secondLevelColumn).clearDataValidations();
    var filteredOptions = options.filter(function(options){return options[0] === val});
    var listToApply = filteredOptions.map(function(options){return options[1]});
    var cell = ws.getRange(r,secondLevelColumn).setValue(val);
    applyValidationToCell(listToApply,cell);
    }

   }     
function applyValidationToCell(list,cell){
  
  var rule =SpreadsheetApp
  .newDataValidation()
  .requireValueInList(list)
  .setAllowInvalid(false)
  .build();
  
  cell.setDataValidation(rule)
}
      
      
var mainWsName = "Remer";
var listsWsName = "Lists"
var firstLevelColumn = 6;
var secondLevelColumn = 7;


var ws =SpreadsheetApp.getActiveSpreadsheet().getSheetByName(mainWsName);
var wsLists =SpreadsheetApp.getActiveSpreadsheet().getSheetByName(listsWsName);
var options = wsLists.getRange(2,1,wsLists.getLastRow()-1,2).getValues();




function onEdit(e){
  var activeCell = e.range;
  var val = activeCell.getValue();
  var r = activeCell.getRow();
  var c = activeCell.getColumn(); 
  var wsName = activeCell.getSheet().getName();
  if(wsName === mainWsName && c === firstLevelColumn && r > 1){
    applyFirstLevelValidation(val,r,);
   } else if(wsName === mainWsName && c === secondLevelColumn && r > 1){
   applySecondLevelValidation(val,r,);
   }                             
  
    
 }//end onEdit

function applyFirstLevelValidation(val,r,){
  
  if(val === ""){
      ws.getRange(r,secondLevelColumn).clearContent();
      ws.getRange(r,secondLevelColumn).clearDataValidations();
    }else {
    ws.getRange(r,secondLevelColumn).clearContent();
    ws.getRange(r,secondLevelColumn).clearDataValidations();
    var filteredOptions = options.filter(function(options){return options[0] === val});
    var listToApply = filteredOptions.map(function(options){return options[1]});
    var cell = ws.getRange(r,secondLevelColumn).setValue(val);
    applyValidationToCell(listToApply,cell);
    }

   }     
function applyValidationToCell(list,cell){
  
  var rule =SpreadsheetApp
  .newDataValidation()
  .requireValueInList(list)
  .setAllowInvalid(false)
  .build();
  
  cell.setDataValidation(rule)
}
      
      
var mainWsName = "Browerville";
var listsWsName = "Lists"
var firstLevelColumn = 6;
var secondLevelColumn = 7;


var ws =SpreadsheetApp.getActiveSpreadsheet().getSheetByName(mainWsName);
var wsLists =SpreadsheetApp.getActiveSpreadsheet().getSheetByName(listsWsName);
var options = wsLists.getRange(2,1,wsLists.getLastRow()-1,2).getValues();




function onEdit(e){
  var activeCell = e.range;
  var val = activeCell.getValue();
  var r = activeCell.getRow();
  var c = activeCell.getColumn(); 
  var wsName = activeCell.getSheet().getName();
  if(wsName === mainWsName && c === firstLevelColumn && r > 1){
    applyFirstLevelValidation(val,r,);
   } else if(wsName === mainWsName && c === secondLevelColumn && r > 1){
   applySecondLevelValidation(val,r,);
   }                             
  
    
 }//end onEdit

function applyFirstLevelValidation(val,r,){
  
  if(val === ""){
      ws.getRange(r,secondLevelColumn).clearContent();
      ws.getRange(r,secondLevelColumn).clearDataValidations();
    }else {
    ws.getRange(r,secondLevelColumn).clearContent();
    ws.getRange(r,secondLevelColumn).clearDataValidations();
    var filteredOptions = options.filter(function(options){return options[0] === val});
    var listToApply = filteredOptions.map(function(options){return options[1]});
    var cell = ws.getRange(r,secondLevelColumn).setValue(val);
    applyValidationToCell(listToApply,cell);
    }

   }     
function applyValidationToCell(list,cell){
  
  var rule =SpreadsheetApp
  .newDataValidation()
  .requireValueInList(list)
  .setAllowInvalid(false)
  .build();
  
  cell.setDataValidation(rule)
}
      
var mainWsName = "Pillager";
var listsWsName = "Lists"
var firstLevelColumn = 6;
var secondLevelColumn = 7;


var ws =SpreadsheetApp.getActiveSpreadsheet().getSheetByName(mainWsName);
var wsLists =SpreadsheetApp.getActiveSpreadsheet().getSheetByName(listsWsName);
var options = wsLists.getRange(2,1,wsLists.getLastRow()-1,2).getValues();




function onEdit(e){
  var activeCell = e.range;
  var val = activeCell.getValue();
  var r = activeCell.getRow();
  var c = activeCell.getColumn(); 
  var wsName = activeCell.getSheet().getName();
  if(wsName === mainWsName && c === firstLevelColumn && r > 1){
    applyFirstLevelValidation(val,r,);
   } else if(wsName === mainWsName && c === secondLevelColumn && r > 1){
   applySecondLevelValidation(val,r,);
   }                             
  
    
 }//end onEdit

function applyFirstLevelValidation(val,r,){
  
  if(val === ""){
      ws.getRange(r,secondLevelColumn).clearContent();
      ws.getRange(r,secondLevelColumn).clearDataValidations();
    }else {
    ws.getRange(r,secondLevelColumn).clearContent();
    ws.getRange(r,secondLevelColumn).clearDataValidations();
    var filteredOptions = options.filter(function(options){return options[0] === val});
    var listToApply = filteredOptions.map(function(options){return options[1]});
    var cell = ws.getRange(r,secondLevelColumn).setValue(val);
    applyValidationToCell(listToApply,cell);
    }

   }     
function applyValidationToCell(list,cell){
  
  var rule =SpreadsheetApp
  .newDataValidation()
  .requireValueInList(list)
  .setAllowInvalid(false)
  .build();
  
  cell.setDataValidation(rule)
}
      
      
var mainWsName = "Upsala";
var listsWsName = "Lists"
var firstLevelColumn = 6;
var secondLevelColumn = 7;


var ws =SpreadsheetApp.getActiveSpreadsheet().getSheetByName(mainWsName);
var wsLists =SpreadsheetApp.getActiveSpreadsheet().getSheetByName(listsWsName);
var options = wsLists.getRange(2,1,wsLists.getLastRow()-1,2).getValues();




function onEdit(e){
  var activeCell = e.range;
  var val = activeCell.getValue();
  var r = activeCell.getRow();
  var c = activeCell.getColumn(); 
  var wsName = activeCell.getSheet().getName();
  if(wsName === mainWsName && c === firstLevelColumn && r > 1){
    applyFirstLevelValidation(val,r,);
   } else if(wsName === mainWsName && c === secondLevelColumn && r > 1){
   applySecondLevelValidation(val,r,);
   }                             
  
    
 }//end onEdit

function applyFirstLevelValidation(val,r,){
  
  if(val === ""){
      ws.getRange(r,secondLevelColumn).clearContent();
      ws.getRange(r,secondLevelColumn).clearDataValidations();
    }else {
    ws.getRange(r,secondLevelColumn).clearContent();
    ws.getRange(r,secondLevelColumn).clearDataValidations();
    var filteredOptions = options.filter(function(options){return options[0] === val});
    var listToApply = filteredOptions.map(function(options){return options[1]});
    var cell = ws.getRange(r,secondLevelColumn).setValue(val);
    applyValidationToCell(listToApply,cell);
    }

   }     
function applyValidationToCell(list,cell){
  
  var rule =SpreadsheetApp
  .newDataValidation()
  .requireValueInList(list)
  .setAllowInvalid(false)
  .build();
  
  cell.setDataValidation(rule)
}

var mainWsName = "Swanville";
var listsWsName = "Lists"
var firstLevelColumn = 6;
var secondLevelColumn = 7;


var ws =SpreadsheetApp.getActiveSpreadsheet().getSheetByName(mainWsName);
var wsLists =SpreadsheetApp.getActiveSpreadsheet().getSheetByName(listsWsName);
var options = wsLists.getRange(2,1,wsLists.getLastRow()-1,2).getValues();




function onEdit(e){
  var activeCell = e.range;
  var val = activeCell.getValue();
  var r = activeCell.getRow();
  var c = activeCell.getColumn(); 
  var wsName = activeCell.getSheet().getName();
  if(wsName === mainWsName && c === firstLevelColumn && r > 1){
    applyFirstLevelValidation(val,r,);
   } else if(wsName === mainWsName && c === secondLevelColumn && r > 1){
   applySecondLevelValidation(val,r,);
   }                             
  
    
 }//end onEdit

function applyFirstLevelValidation(val,r,){
  
  if(val === ""){
      ws.getRange(r,secondLevelColumn).clearContent();
      ws.getRange(r,secondLevelColumn).clearDataValidations();
    }else {
    ws.getRange(r,secondLevelColumn).clearContent();
    ws.getRange(r,secondLevelColumn).clearDataValidations();
    var filteredOptions = options.filter(function(options){return options[0] === val});
    var listToApply = filteredOptions.map(function(options){return options[1]});
    var cell = ws.getRange(r,secondLevelColumn).setValue(val);
    applyValidationToCell(listToApply,cell);
    }

   }     
function applyValidationToCell(list,cell){
  
  var rule =SpreadsheetApp
  .newDataValidation()
  .requireValueInList(list)
  .setAllowInvalid(false)
  .build();
  
  cell.setDataValidation(rule)
}

var mainWsName = "Pierz";
var listsWsName = "Lists"
var firstLevelColumn = 6;
var secondLevelColumn = 7;


var ws =SpreadsheetApp.getActiveSpreadsheet().getSheetByName(mainWsName);
var wsLists =SpreadsheetApp.getActiveSpreadsheet().getSheetByName(listsWsName);
var options = wsLists.getRange(2,1,wsLists.getLastRow()-1,2).getValues();




function onEdit(e){
  var activeCell = e.range;
  var val = activeCell.getValue();
  var r = activeCell.getRow();
  var c = activeCell.getColumn(); 
  var wsName = activeCell.getSheet().getName();
  if(wsName === mainWsName && c === firstLevelColumn && r > 1){
    applyFirstLevelValidation(val,r,);
   } else if(wsName === mainWsName && c === secondLevelColumn && r > 1){
   applySecondLevelValidation(val,r,);
   }                             
  
    
 }//end onEdit

function applyFirstLevelValidation(val,r,){
  
  if(val === ""){
      ws.getRange(r,secondLevelColumn).clearContent();
      ws.getRange(r,secondLevelColumn).clearDataValidations();
    }else {
    ws.getRange(r,secondLevelColumn).clearContent();
    ws.getRange(r,secondLevelColumn).clearDataValidations();
    var filteredOptions = options.filter(function(options){return options[0] === val});
    var listToApply = filteredOptions.map(function(options){return options[1]});
    var cell = ws.getRange(r,secondLevelColumn).setValue(val);
    applyValidationToCell(listToApply,cell);
    }

   }     
function applyValidationToCell(list,cell){
  
  var rule =SpreadsheetApp
  .newDataValidation()
  .requireValueInList(list)
  .setAllowInvalid(false)
  .build();
  
  cell.setDataValidation(rule)
}

var mainWsName = "Pequot Lakes";
var listsWsName = "Lists"
var firstLevelColumn = 6;
var secondLevelColumn = 7;


var ws =SpreadsheetApp.getActiveSpreadsheet().getSheetByName(mainWsName);
var wsLists =SpreadsheetApp.getActiveSpreadsheet().getSheetByName(listsWsName);
var options = wsLists.getRange(2,1,wsLists.getLastRow()-1,2).getValues();




function onEdit(e){
  var activeCell = e.range;
  var val = activeCell.getValue();
  var r = activeCell.getRow();
  var c = activeCell.getColumn(); 
  var wsName = activeCell.getSheet().getName();
  if(wsName === mainWsName && c === firstLevelColumn && r > 1){
    applyFirstLevelValidation(val,r,);
   } else if(wsName === mainWsName && c === secondLevelColumn && r > 1){
   applySecondLevelValidation(val,r,);
   }                             
  
    
 }//end onEdit

function applyFirstLevelValidation(val,r,){
  
  if(val === ""){
      ws.getRange(r,secondLevelColumn).clearContent();
      ws.getRange(r,secondLevelColumn).clearDataValidations();
    }else {
    ws.getRange(r,secondLevelColumn).clearContent();
    ws.getRange(r,secondLevelColumn).clearDataValidations();
    var filteredOptions = options.filter(function(options){return options[0] === val});
    var listToApply = filteredOptions.map(function(options){return options[1]});
    var cell = ws.getRange(r,secondLevelColumn).setValue(val);
    applyValidationToCell(listToApply,cell);
    }

   }     
function applyValidationToCell(list,cell){
  
  var rule =SpreadsheetApp
  .newDataValidation()
  .requireValueInList(list)
  .setAllowInvalid(false)
  .build();
  
  cell.setDataValidation(rule)
}      